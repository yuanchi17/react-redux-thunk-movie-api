{"version":3,"sources":["actions/movie.js","views/card.js","App.js","store/movie.js","store/index.js","index.js"],"names":["setMovies","data","type","payload","card","className","title","title_origin","src","image","alt","date","dispatch","useDispatch","movies","useSelector","state","console","log","useEffect","a","_","axios","get","map","m","initState","movieList","action","release_date","backdrop_path","original_title","store","createStore","applyMiddleware","thunk","rootElement","document","getElementById","ReactDOM","render","App"],"mappings":"yPAIMA,EAAY,SAACC,GAAD,MAAW,CAC3BC,KAAM,aACNC,QAAS,CAAEF,U,cCeEG,EAnBF,SAAC,GAAc,IAAZH,EAAW,EAAXA,KACd,OACE,qBAAKI,UAAU,gCAAf,SACE,qBAAKA,UAAU,qCAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,iBAAd,SAAgCJ,EAAKK,QACrC,mBAAGD,UAAU,MAAb,SAAoBJ,EAAKM,eACzB,qBACEF,UAAU,gBACVG,IAAG,yCAAoCP,EAAKQ,OAC5CC,IAAI,iBAEN,uBAAML,UAAU,aAAhB,2CAAmCJ,EAAKU,gBCRnC,aACb,IAAMC,EAAWC,cACXC,EAASC,aAAY,SAACC,GAAD,OAAWA,KAOtC,OANAC,QAAQC,IAAI,SAAUJ,GAEtBK,qBAAU,WACRP,EFDF,uCAAO,WAAMA,GAAN,eAAAQ,EAAA,kEACQC,IADR,SAEGC,IAAMC,IACV,0GAHC,mBACCtB,EADD,KACUsB,IADV,eAKH,gBAEFX,EAASZ,EAAUC,IAPd,2CAAP,yDEEG,IAGD,sBAAKI,UAAU,qBAAf,UACE,oBAAIA,UAAU,SAAd,4CACA,qBAAKA,UAAU,sBAAf,SAEIS,EAAOU,KAAI,SAAAC,GAAC,OACV,cAAC,EAAD,CAAMxB,KAAMwB,GAAQA,EAAEnB,gB,gCCnB5BoB,EAAY,GAmBHC,EAjBG,WAAgC,IAA/BX,EAA8B,uDAAtBU,EAAWE,EAAW,uCAC/C,OAAQA,EAAO1B,MACb,IAAK,aACH,OAAO,YACFmB,IAAEG,IAAII,EAAOzB,QAAQF,MAAM,SAACwB,GAAD,MAAQ,CACpCd,KAAMc,EAAEI,aACRpB,MAAOgB,EAAEK,cACTvB,aAAckB,EAAEM,eAChBzB,MAAOmB,EAAEnB,WAIf,QACE,OAAOU,I,QCXEgB,EAFDC,YAAYN,EAAWO,YAAgBC,MCE/CC,EAAcC,SAASC,eAAe,QAE5CC,IAASC,OACP,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACE,cAACS,EAAD,MAEFL,K","file":"static/js/main.96743641.chunk.js","sourcesContent":["import _ from 'lodash'\r\nimport axios from 'axios'\r\n\r\n// 同步的 action\r\nconst setMovies = (data) => ({\r\n  type: 'GET_MOVIES',\r\n  payload: { data },\r\n})\r\n\r\n// 非同步的 action，回傳函式\r\nexport const fetchMovies = () => {\r\n  return async dispatch => {\r\n    const data = _.get(\r\n      await axios.get(\r\n        'https://api.themoviedb.org/3/movie/now_playing?api_key=079d25c82040bf67eedcb0b96ca55e2e&language=zh-TW'\r\n      ),\r\n      'data.results'\r\n    )\r\n    dispatch(setMovies(data))\r\n  }\r\n}\r\n\r\n// 錯誤寫法\r\n// exports.fetchMovies = async (dispatch) => {\r\n//   const data = _.get(\r\n//     await axios.get(\r\n//       \"https://api.themoviedb.org/3/movie/now_playing?api_key=079d25c82040bf67eedcb0b96ca55e2e&language=zh-TW\"\r\n//     ),\r\n//     \"data.results\"\r\n//   );\r\n//   console.log(\"fetchMovies\", data);\r\n//   dispatch({\r\n//     type: \"GET_MOVIES\",\r\n//     payload: { data }\r\n//   });\r\n// };\r\n","import React from 'react'\r\n\r\nconst card = ({ data }) => {\r\n  return (\r\n    <div className=\"movie col-sm-12 col-md-4 mb-4\">\r\n      <div className=\"card d-flex justify-content-center\">\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title m-0\">{data.title}</h5>\r\n          <p className=\"m-0\">{data.title_origin}</p>\r\n          <img\r\n            className=\"card-img my-2\"\r\n            src={`https://image.tmdb.org/t/p/w500${data.image}`}\r\n            alt=\"圖片\"\r\n          ></img>\r\n          <span className=\"text-muted\">上映日期：{data.date}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default card\r\n","import './styles.css'\nimport { fetchMovies } from './actions/movie'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Card from './views/card'\nimport React, { useEffect } from 'react'\n\nexport default () => {\n  const dispatch = useDispatch()\n  const movies = useSelector((state) => state)\n  console.log('movies', movies)\n\n  useEffect(() => {\n    dispatch(fetchMovies())\n  }, [])\n\n  return (\n    <div className=\"App container my-2\">\n      <h2 className=\"app-h2\">現正熱映中</h2>\n      <div className=\"movie-list row mx-2\">\n        {\n          movies.map(m => (\n            <Card data={m} key={m.title} />\n          ))\n        }\n      </div>\n    </div>\n  )\n}\n","import _ from 'lodash'\r\n\r\nconst initState = []\r\n\r\nconst movieList = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'GET_MOVIES': {\r\n      return [\r\n        ..._.map(action.payload.data, (m) => ({\r\n          date: m.release_date,\r\n          image: m.backdrop_path,\r\n          title_origin: m.original_title,\r\n          title: m.title,\r\n        })),\r\n      ]\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default movieList\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport movieList from './movie.js'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst store = createStore(movieList, applyMiddleware(thunk))\r\n\r\nexport default store\r\n","import { Provider } from 'react-redux'\nimport App from './App'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport store from './store'\n\nconst rootElement = document.getElementById('root')\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n)\n"],"sourceRoot":""}